Grammar:

Rule 0     S' -> expr_set
Rule 1     expr_set -> expr
Rule 2     expr_set -> expr ;
Rule 3     expr_set -> expr_set expr
Rule 4     expr_set -> expr_set expr ;
Rule 5     expr -> term
Rule 6     expr -> ID
Rule 7     expr -> ( expr )
Rule 8     expr -> - expr  [precedence=right, level=4]
Rule 9     expr -> expr DOTDIV expr  [precedence=left, level=3]
Rule 10    expr -> expr DOTMUL expr  [precedence=left, level=3]
Rule 11    expr -> expr DOTSUB expr  [precedence=left, level=2]
Rule 12    expr -> expr DOTADD expr  [precedence=left, level=2]
Rule 13    expr -> expr / expr  [precedence=left, level=3]
Rule 14    expr -> expr * expr  [precedence=left, level=3]
Rule 15    expr -> expr - expr  [precedence=left, level=2]
Rule 16    expr -> expr + expr  [precedence=left, level=2]
Rule 17    expr -> ID DIVASSIGN expr  [precedence=left, level=1]
Rule 18    expr -> ID MULASSIGN expr  [precedence=left, level=1]
Rule 19    expr -> ID SUBASSIGN expr  [precedence=left, level=1]
Rule 20    expr -> ID ADDASSIGN expr  [precedence=left, level=1]
Rule 21    expr -> ID = expr  [precedence=left, level=1]
Rule 22    term -> INTNUM
Rule 23    term -> FLOATNUM
Rule 24    term -> EYE ( expr )
Rule 25    term -> ONES ( expr )
Rule 26    term -> ZEROS ( expr )
Rule 27    term -> [ outerlist ]
Rule 28    outerlist -> [ innerlist ]
Rule 29    outerlist -> outerlist , [ innerlist ]
Rule 30    innerlist -> expr
Rule 31    innerlist -> innerlist , expr

Unused terminals:

    BREAK
    WHILE
    FOR
    PRINT
    ELSE
    NEQ
    GEQ
    CONTINUE
    IF
    LEQ
    STRING
    EQU
    RETURN

Terminals, with rules where they appear:

(                    : 7 24 25 26
)                    : 7 24 25 26
*                    : 14
+                    : 16
,                    : 29 31
-                    : 8 15
/                    : 13
;                    : 2 4
=                    : 21
ADDASSIGN            : 20
BREAK                : 
CONTINUE             : 
DIVASSIGN            : 17
DOTADD               : 12
DOTDIV               : 9
DOTMUL               : 10
DOTSUB               : 11
ELSE                 : 
EQU                  : 
EYE                  : 24
FLOATNUM             : 23
FOR                  : 
GEQ                  : 
ID                   : 6 17 18 19 20 21
IF                   : 
INTNUM               : 22
LEQ                  : 
MULASSIGN            : 18
NEQ                  : 
ONES                 : 25
PRINT                : 
RETURN               : 
STRING               : 
SUBASSIGN            : 19
WHILE                : 
ZEROS                : 26
[                    : 27 28 29
]                    : 27 28 29
error                : 

Nonterminals, with rules where they appear:

expr                 : 1 2 3 4 7 8 9 9 10 10 11 11 12 12 13 13 14 14 15 15 16 16 17 18 19 20 21 24 25 26 30 31
expr_set             : 3 4 0
innerlist            : 28 29 31
outerlist            : 27 29
term                 : 5


state 0

    (0) S' -> . expr_set
    (1) expr_set -> . expr
    (2) expr_set -> . expr ;
    (3) expr_set -> . expr_set expr
    (4) expr_set -> . expr_set expr ;
    (5) expr -> . term
    (6) expr -> . ID
    (7) expr -> . ( expr )
    (8) expr -> . - expr
    (9) expr -> . expr DOTDIV expr
    (10) expr -> . expr DOTMUL expr
    (11) expr -> . expr DOTSUB expr
    (12) expr -> . expr DOTADD expr
    (13) expr -> . expr / expr
    (14) expr -> . expr * expr
    (15) expr -> . expr - expr
    (16) expr -> . expr + expr
    (17) expr -> . ID DIVASSIGN expr
    (18) expr -> . ID MULASSIGN expr
    (19) expr -> . ID SUBASSIGN expr
    (20) expr -> . ID ADDASSIGN expr
    (21) expr -> . ID = expr
    (22) term -> . INTNUM
    (23) term -> . FLOATNUM
    (24) term -> . EYE ( expr )
    (25) term -> . ONES ( expr )
    (26) term -> . ZEROS ( expr )
    (27) term -> . [ outerlist ]
    ID              shift and go to state 4
    (               shift and go to state 5
    -               shift and go to state 6
    INTNUM          shift and go to state 7
    FLOATNUM        shift and go to state 8
    EYE             shift and go to state 9
    ONES            shift and go to state 10
    ZEROS           shift and go to state 11
    [               shift and go to state 12

    expr_set                       shift and go to state 1
    expr                           shift and go to state 2
    term                           shift and go to state 3

state 1

    (0) S' -> expr_set .
    (3) expr_set -> expr_set . expr
    (4) expr_set -> expr_set . expr ;
    (5) expr -> . term
    (6) expr -> . ID
    (7) expr -> . ( expr )
    (8) expr -> . - expr
    (9) expr -> . expr DOTDIV expr
    (10) expr -> . expr DOTMUL expr
    (11) expr -> . expr DOTSUB expr
    (12) expr -> . expr DOTADD expr
    (13) expr -> . expr / expr
    (14) expr -> . expr * expr
    (15) expr -> . expr - expr
    (16) expr -> . expr + expr
    (17) expr -> . ID DIVASSIGN expr
    (18) expr -> . ID MULASSIGN expr
    (19) expr -> . ID SUBASSIGN expr
    (20) expr -> . ID ADDASSIGN expr
    (21) expr -> . ID = expr
    (22) term -> . INTNUM
    (23) term -> . FLOATNUM
    (24) term -> . EYE ( expr )
    (25) term -> . ONES ( expr )
    (26) term -> . ZEROS ( expr )
    (27) term -> . [ outerlist ]
    ID              shift and go to state 4
    (               shift and go to state 5
    -               shift and go to state 6
    INTNUM          shift and go to state 7
    FLOATNUM        shift and go to state 8
    EYE             shift and go to state 9
    ONES            shift and go to state 10
    ZEROS           shift and go to state 11
    [               shift and go to state 12

    expr                           shift and go to state 13
    term                           shift and go to state 3

state 2

    (1) expr_set -> expr .
    (2) expr_set -> expr . ;
    (9) expr -> expr . DOTDIV expr
    (10) expr -> expr . DOTMUL expr
    (11) expr -> expr . DOTSUB expr
    (12) expr -> expr . DOTADD expr
    (13) expr -> expr . / expr
    (14) expr -> expr . * expr
    (15) expr -> expr . - expr
    (16) expr -> expr . + expr
  ! shift/reduce conflict for - resolved as shift
    ID              reduce using rule 1 (expr_set -> expr .)
    (               reduce using rule 1 (expr_set -> expr .)
    INTNUM          reduce using rule 1 (expr_set -> expr .)
    FLOATNUM        reduce using rule 1 (expr_set -> expr .)
    EYE             reduce using rule 1 (expr_set -> expr .)
    ONES            reduce using rule 1 (expr_set -> expr .)
    ZEROS           reduce using rule 1 (expr_set -> expr .)
    [               reduce using rule 1 (expr_set -> expr .)
    $end            reduce using rule 1 (expr_set -> expr .)
    ;               shift and go to state 14
    DOTDIV          shift and go to state 15
    DOTMUL          shift and go to state 16
    DOTSUB          shift and go to state 17
    DOTADD          shift and go to state 18
    /               shift and go to state 19
    *               shift and go to state 20
    -               shift and go to state 21
    +               shift and go to state 22


state 3

    (5) expr -> term .
    ;               reduce using rule 5 (expr -> term .)
    DOTDIV          reduce using rule 5 (expr -> term .)
    DOTMUL          reduce using rule 5 (expr -> term .)
    DOTSUB          reduce using rule 5 (expr -> term .)
    DOTADD          reduce using rule 5 (expr -> term .)
    /               reduce using rule 5 (expr -> term .)
    *               reduce using rule 5 (expr -> term .)
    -               reduce using rule 5 (expr -> term .)
    +               reduce using rule 5 (expr -> term .)
    ID              reduce using rule 5 (expr -> term .)
    (               reduce using rule 5 (expr -> term .)
    INTNUM          reduce using rule 5 (expr -> term .)
    FLOATNUM        reduce using rule 5 (expr -> term .)
    EYE             reduce using rule 5 (expr -> term .)
    ONES            reduce using rule 5 (expr -> term .)
    ZEROS           reduce using rule 5 (expr -> term .)
    [               reduce using rule 5 (expr -> term .)
    $end            reduce using rule 5 (expr -> term .)
    )               reduce using rule 5 (expr -> term .)
    ]               reduce using rule 5 (expr -> term .)
    ,               reduce using rule 5 (expr -> term .)


state 4

    (6) expr -> ID .
    (17) expr -> ID . DIVASSIGN expr
    (18) expr -> ID . MULASSIGN expr
    (19) expr -> ID . SUBASSIGN expr
    (20) expr -> ID . ADDASSIGN expr
    (21) expr -> ID . = expr
    ;               reduce using rule 6 (expr -> ID .)
    DOTDIV          reduce using rule 6 (expr -> ID .)
    DOTMUL          reduce using rule 6 (expr -> ID .)
    DOTSUB          reduce using rule 6 (expr -> ID .)
    DOTADD          reduce using rule 6 (expr -> ID .)
    /               reduce using rule 6 (expr -> ID .)
    *               reduce using rule 6 (expr -> ID .)
    -               reduce using rule 6 (expr -> ID .)
    +               reduce using rule 6 (expr -> ID .)
    ID              reduce using rule 6 (expr -> ID .)
    (               reduce using rule 6 (expr -> ID .)
    INTNUM          reduce using rule 6 (expr -> ID .)
    FLOATNUM        reduce using rule 6 (expr -> ID .)
    EYE             reduce using rule 6 (expr -> ID .)
    ONES            reduce using rule 6 (expr -> ID .)
    ZEROS           reduce using rule 6 (expr -> ID .)
    [               reduce using rule 6 (expr -> ID .)
    $end            reduce using rule 6 (expr -> ID .)
    )               reduce using rule 6 (expr -> ID .)
    ]               reduce using rule 6 (expr -> ID .)
    ,               reduce using rule 6 (expr -> ID .)
    DIVASSIGN       shift and go to state 23
    MULASSIGN       shift and go to state 24
    SUBASSIGN       shift and go to state 25
    ADDASSIGN       shift and go to state 26
    =               shift and go to state 27


state 5

    (7) expr -> ( . expr )
    (5) expr -> . term
    (6) expr -> . ID
    (7) expr -> . ( expr )
    (8) expr -> . - expr
    (9) expr -> . expr DOTDIV expr
    (10) expr -> . expr DOTMUL expr
    (11) expr -> . expr DOTSUB expr
    (12) expr -> . expr DOTADD expr
    (13) expr -> . expr / expr
    (14) expr -> . expr * expr
    (15) expr -> . expr - expr
    (16) expr -> . expr + expr
    (17) expr -> . ID DIVASSIGN expr
    (18) expr -> . ID MULASSIGN expr
    (19) expr -> . ID SUBASSIGN expr
    (20) expr -> . ID ADDASSIGN expr
    (21) expr -> . ID = expr
    (22) term -> . INTNUM
    (23) term -> . FLOATNUM
    (24) term -> . EYE ( expr )
    (25) term -> . ONES ( expr )
    (26) term -> . ZEROS ( expr )
    (27) term -> . [ outerlist ]
    ID              shift and go to state 4
    (               shift and go to state 5
    -               shift and go to state 6
    INTNUM          shift and go to state 7
    FLOATNUM        shift and go to state 8
    EYE             shift and go to state 9
    ONES            shift and go to state 10
    ZEROS           shift and go to state 11
    [               shift and go to state 12

    expr                           shift and go to state 28
    term                           shift and go to state 3

state 6

    (8) expr -> - . expr
    (5) expr -> . term
    (6) expr -> . ID
    (7) expr -> . ( expr )
    (8) expr -> . - expr
    (9) expr -> . expr DOTDIV expr
    (10) expr -> . expr DOTMUL expr
    (11) expr -> . expr DOTSUB expr
    (12) expr -> . expr DOTADD expr
    (13) expr -> . expr / expr
    (14) expr -> . expr * expr
    (15) expr -> . expr - expr
    (16) expr -> . expr + expr
    (17) expr -> . ID DIVASSIGN expr
    (18) expr -> . ID MULASSIGN expr
    (19) expr -> . ID SUBASSIGN expr
    (20) expr -> . ID ADDASSIGN expr
    (21) expr -> . ID = expr
    (22) term -> . INTNUM
    (23) term -> . FLOATNUM
    (24) term -> . EYE ( expr )
    (25) term -> . ONES ( expr )
    (26) term -> . ZEROS ( expr )
    (27) term -> . [ outerlist ]
    ID              shift and go to state 4
    (               shift and go to state 5
    -               shift and go to state 6
    INTNUM          shift and go to state 7
    FLOATNUM        shift and go to state 8
    EYE             shift and go to state 9
    ONES            shift and go to state 10
    ZEROS           shift and go to state 11
    [               shift and go to state 12

    expr                           shift and go to state 29
    term                           shift and go to state 3

state 7

    (22) term -> INTNUM .
    ;               reduce using rule 22 (term -> INTNUM .)
    DOTDIV          reduce using rule 22 (term -> INTNUM .)
    DOTMUL          reduce using rule 22 (term -> INTNUM .)
    DOTSUB          reduce using rule 22 (term -> INTNUM .)
    DOTADD          reduce using rule 22 (term -> INTNUM .)
    /               reduce using rule 22 (term -> INTNUM .)
    *               reduce using rule 22 (term -> INTNUM .)
    -               reduce using rule 22 (term -> INTNUM .)
    +               reduce using rule 22 (term -> INTNUM .)
    ID              reduce using rule 22 (term -> INTNUM .)
    (               reduce using rule 22 (term -> INTNUM .)
    INTNUM          reduce using rule 22 (term -> INTNUM .)
    FLOATNUM        reduce using rule 22 (term -> INTNUM .)
    EYE             reduce using rule 22 (term -> INTNUM .)
    ONES            reduce using rule 22 (term -> INTNUM .)
    ZEROS           reduce using rule 22 (term -> INTNUM .)
    [               reduce using rule 22 (term -> INTNUM .)
    $end            reduce using rule 22 (term -> INTNUM .)
    )               reduce using rule 22 (term -> INTNUM .)
    ]               reduce using rule 22 (term -> INTNUM .)
    ,               reduce using rule 22 (term -> INTNUM .)


state 8

    (23) term -> FLOATNUM .
    ;               reduce using rule 23 (term -> FLOATNUM .)
    DOTDIV          reduce using rule 23 (term -> FLOATNUM .)
    DOTMUL          reduce using rule 23 (term -> FLOATNUM .)
    DOTSUB          reduce using rule 23 (term -> FLOATNUM .)
    DOTADD          reduce using rule 23 (term -> FLOATNUM .)
    /               reduce using rule 23 (term -> FLOATNUM .)
    *               reduce using rule 23 (term -> FLOATNUM .)
    -               reduce using rule 23 (term -> FLOATNUM .)
    +               reduce using rule 23 (term -> FLOATNUM .)
    ID              reduce using rule 23 (term -> FLOATNUM .)
    (               reduce using rule 23 (term -> FLOATNUM .)
    INTNUM          reduce using rule 23 (term -> FLOATNUM .)
    FLOATNUM        reduce using rule 23 (term -> FLOATNUM .)
    EYE             reduce using rule 23 (term -> FLOATNUM .)
    ONES            reduce using rule 23 (term -> FLOATNUM .)
    ZEROS           reduce using rule 23 (term -> FLOATNUM .)
    [               reduce using rule 23 (term -> FLOATNUM .)
    $end            reduce using rule 23 (term -> FLOATNUM .)
    )               reduce using rule 23 (term -> FLOATNUM .)
    ]               reduce using rule 23 (term -> FLOATNUM .)
    ,               reduce using rule 23 (term -> FLOATNUM .)


state 9

    (24) term -> EYE . ( expr )
    (               shift and go to state 30


state 10

    (25) term -> ONES . ( expr )
    (               shift and go to state 31


state 11

    (26) term -> ZEROS . ( expr )
    (               shift and go to state 32


state 12

    (27) term -> [ . outerlist ]
    (28) outerlist -> . [ innerlist ]
    (29) outerlist -> . outerlist , [ innerlist ]
    [               shift and go to state 33

    outerlist                      shift and go to state 34

state 13

    (3) expr_set -> expr_set expr .
    (4) expr_set -> expr_set expr . ;
    (9) expr -> expr . DOTDIV expr
    (10) expr -> expr . DOTMUL expr
    (11) expr -> expr . DOTSUB expr
    (12) expr -> expr . DOTADD expr
    (13) expr -> expr . / expr
    (14) expr -> expr . * expr
    (15) expr -> expr . - expr
    (16) expr -> expr . + expr
  ! shift/reduce conflict for - resolved as shift
    ID              reduce using rule 3 (expr_set -> expr_set expr .)
    (               reduce using rule 3 (expr_set -> expr_set expr .)
    INTNUM          reduce using rule 3 (expr_set -> expr_set expr .)
    FLOATNUM        reduce using rule 3 (expr_set -> expr_set expr .)
    EYE             reduce using rule 3 (expr_set -> expr_set expr .)
    ONES            reduce using rule 3 (expr_set -> expr_set expr .)
    ZEROS           reduce using rule 3 (expr_set -> expr_set expr .)
    [               reduce using rule 3 (expr_set -> expr_set expr .)
    $end            reduce using rule 3 (expr_set -> expr_set expr .)
    ;               shift and go to state 35
    DOTDIV          shift and go to state 15
    DOTMUL          shift and go to state 16
    DOTSUB          shift and go to state 17
    DOTADD          shift and go to state 18
    /               shift and go to state 19
    *               shift and go to state 20
    -               shift and go to state 21
    +               shift and go to state 22


state 14

    (2) expr_set -> expr ; .
    ID              reduce using rule 2 (expr_set -> expr ; .)
    (               reduce using rule 2 (expr_set -> expr ; .)
    -               reduce using rule 2 (expr_set -> expr ; .)
    INTNUM          reduce using rule 2 (expr_set -> expr ; .)
    FLOATNUM        reduce using rule 2 (expr_set -> expr ; .)
    EYE             reduce using rule 2 (expr_set -> expr ; .)
    ONES            reduce using rule 2 (expr_set -> expr ; .)
    ZEROS           reduce using rule 2 (expr_set -> expr ; .)
    [               reduce using rule 2 (expr_set -> expr ; .)
    $end            reduce using rule 2 (expr_set -> expr ; .)


state 15

    (9) expr -> expr DOTDIV . expr
    (5) expr -> . term
    (6) expr -> . ID
    (7) expr -> . ( expr )
    (8) expr -> . - expr
    (9) expr -> . expr DOTDIV expr
    (10) expr -> . expr DOTMUL expr
    (11) expr -> . expr DOTSUB expr
    (12) expr -> . expr DOTADD expr
    (13) expr -> . expr / expr
    (14) expr -> . expr * expr
    (15) expr -> . expr - expr
    (16) expr -> . expr + expr
    (17) expr -> . ID DIVASSIGN expr
    (18) expr -> . ID MULASSIGN expr
    (19) expr -> . ID SUBASSIGN expr
    (20) expr -> . ID ADDASSIGN expr
    (21) expr -> . ID = expr
    (22) term -> . INTNUM
    (23) term -> . FLOATNUM
    (24) term -> . EYE ( expr )
    (25) term -> . ONES ( expr )
    (26) term -> . ZEROS ( expr )
    (27) term -> . [ outerlist ]
    ID              shift and go to state 4
    (               shift and go to state 5
    -               shift and go to state 6
    INTNUM          shift and go to state 7
    FLOATNUM        shift and go to state 8
    EYE             shift and go to state 9
    ONES            shift and go to state 10
    ZEROS           shift and go to state 11
    [               shift and go to state 12

    expr                           shift and go to state 36
    term                           shift and go to state 3

state 16

    (10) expr -> expr DOTMUL . expr
    (5) expr -> . term
    (6) expr -> . ID
    (7) expr -> . ( expr )
    (8) expr -> . - expr
    (9) expr -> . expr DOTDIV expr
    (10) expr -> . expr DOTMUL expr
    (11) expr -> . expr DOTSUB expr
    (12) expr -> . expr DOTADD expr
    (13) expr -> . expr / expr
    (14) expr -> . expr * expr
    (15) expr -> . expr - expr
    (16) expr -> . expr + expr
    (17) expr -> . ID DIVASSIGN expr
    (18) expr -> . ID MULASSIGN expr
    (19) expr -> . ID SUBASSIGN expr
    (20) expr -> . ID ADDASSIGN expr
    (21) expr -> . ID = expr
    (22) term -> . INTNUM
    (23) term -> . FLOATNUM
    (24) term -> . EYE ( expr )
    (25) term -> . ONES ( expr )
    (26) term -> . ZEROS ( expr )
    (27) term -> . [ outerlist ]
    ID              shift and go to state 4
    (               shift and go to state 5
    -               shift and go to state 6
    INTNUM          shift and go to state 7
    FLOATNUM        shift and go to state 8
    EYE             shift and go to state 9
    ONES            shift and go to state 10
    ZEROS           shift and go to state 11
    [               shift and go to state 12

    expr                           shift and go to state 37
    term                           shift and go to state 3

state 17

    (11) expr -> expr DOTSUB . expr
    (5) expr -> . term
    (6) expr -> . ID
    (7) expr -> . ( expr )
    (8) expr -> . - expr
    (9) expr -> . expr DOTDIV expr
    (10) expr -> . expr DOTMUL expr
    (11) expr -> . expr DOTSUB expr
    (12) expr -> . expr DOTADD expr
    (13) expr -> . expr / expr
    (14) expr -> . expr * expr
    (15) expr -> . expr - expr
    (16) expr -> . expr + expr
    (17) expr -> . ID DIVASSIGN expr
    (18) expr -> . ID MULASSIGN expr
    (19) expr -> . ID SUBASSIGN expr
    (20) expr -> . ID ADDASSIGN expr
    (21) expr -> . ID = expr
    (22) term -> . INTNUM
    (23) term -> . FLOATNUM
    (24) term -> . EYE ( expr )
    (25) term -> . ONES ( expr )
    (26) term -> . ZEROS ( expr )
    (27) term -> . [ outerlist ]
    ID              shift and go to state 4
    (               shift and go to state 5
    -               shift and go to state 6
    INTNUM          shift and go to state 7
    FLOATNUM        shift and go to state 8
    EYE             shift and go to state 9
    ONES            shift and go to state 10
    ZEROS           shift and go to state 11
    [               shift and go to state 12

    expr                           shift and go to state 38
    term                           shift and go to state 3

state 18

    (12) expr -> expr DOTADD . expr
    (5) expr -> . term
    (6) expr -> . ID
    (7) expr -> . ( expr )
    (8) expr -> . - expr
    (9) expr -> . expr DOTDIV expr
    (10) expr -> . expr DOTMUL expr
    (11) expr -> . expr DOTSUB expr
    (12) expr -> . expr DOTADD expr
    (13) expr -> . expr / expr
    (14) expr -> . expr * expr
    (15) expr -> . expr - expr
    (16) expr -> . expr + expr
    (17) expr -> . ID DIVASSIGN expr
    (18) expr -> . ID MULASSIGN expr
    (19) expr -> . ID SUBASSIGN expr
    (20) expr -> . ID ADDASSIGN expr
    (21) expr -> . ID = expr
    (22) term -> . INTNUM
    (23) term -> . FLOATNUM
    (24) term -> . EYE ( expr )
    (25) term -> . ONES ( expr )
    (26) term -> . ZEROS ( expr )
    (27) term -> . [ outerlist ]
    ID              shift and go to state 4
    (               shift and go to state 5
    -               shift and go to state 6
    INTNUM          shift and go to state 7
    FLOATNUM        shift and go to state 8
    EYE             shift and go to state 9
    ONES            shift and go to state 10
    ZEROS           shift and go to state 11
    [               shift and go to state 12

    expr                           shift and go to state 39
    term                           shift and go to state 3

state 19

    (13) expr -> expr / . expr
    (5) expr -> . term
    (6) expr -> . ID
    (7) expr -> . ( expr )
    (8) expr -> . - expr
    (9) expr -> . expr DOTDIV expr
    (10) expr -> . expr DOTMUL expr
    (11) expr -> . expr DOTSUB expr
    (12) expr -> . expr DOTADD expr
    (13) expr -> . expr / expr
    (14) expr -> . expr * expr
    (15) expr -> . expr - expr
    (16) expr -> . expr + expr
    (17) expr -> . ID DIVASSIGN expr
    (18) expr -> . ID MULASSIGN expr
    (19) expr -> . ID SUBASSIGN expr
    (20) expr -> . ID ADDASSIGN expr
    (21) expr -> . ID = expr
    (22) term -> . INTNUM
    (23) term -> . FLOATNUM
    (24) term -> . EYE ( expr )
    (25) term -> . ONES ( expr )
    (26) term -> . ZEROS ( expr )
    (27) term -> . [ outerlist ]
    ID              shift and go to state 4
    (               shift and go to state 5
    -               shift and go to state 6
    INTNUM          shift and go to state 7
    FLOATNUM        shift and go to state 8
    EYE             shift and go to state 9
    ONES            shift and go to state 10
    ZEROS           shift and go to state 11
    [               shift and go to state 12

    expr                           shift and go to state 40
    term                           shift and go to state 3

state 20

    (14) expr -> expr * . expr
    (5) expr -> . term
    (6) expr -> . ID
    (7) expr -> . ( expr )
    (8) expr -> . - expr
    (9) expr -> . expr DOTDIV expr
    (10) expr -> . expr DOTMUL expr
    (11) expr -> . expr DOTSUB expr
    (12) expr -> . expr DOTADD expr
    (13) expr -> . expr / expr
    (14) expr -> . expr * expr
    (15) expr -> . expr - expr
    (16) expr -> . expr + expr
    (17) expr -> . ID DIVASSIGN expr
    (18) expr -> . ID MULASSIGN expr
    (19) expr -> . ID SUBASSIGN expr
    (20) expr -> . ID ADDASSIGN expr
    (21) expr -> . ID = expr
    (22) term -> . INTNUM
    (23) term -> . FLOATNUM
    (24) term -> . EYE ( expr )
    (25) term -> . ONES ( expr )
    (26) term -> . ZEROS ( expr )
    (27) term -> . [ outerlist ]
    ID              shift and go to state 4
    (               shift and go to state 5
    -               shift and go to state 6
    INTNUM          shift and go to state 7
    FLOATNUM        shift and go to state 8
    EYE             shift and go to state 9
    ONES            shift and go to state 10
    ZEROS           shift and go to state 11
    [               shift and go to state 12

    expr                           shift and go to state 41
    term                           shift and go to state 3

state 21

    (15) expr -> expr - . expr
    (5) expr -> . term
    (6) expr -> . ID
    (7) expr -> . ( expr )
    (8) expr -> . - expr
    (9) expr -> . expr DOTDIV expr
    (10) expr -> . expr DOTMUL expr
    (11) expr -> . expr DOTSUB expr
    (12) expr -> . expr DOTADD expr
    (13) expr -> . expr / expr
    (14) expr -> . expr * expr
    (15) expr -> . expr - expr
    (16) expr -> . expr + expr
    (17) expr -> . ID DIVASSIGN expr
    (18) expr -> . ID MULASSIGN expr
    (19) expr -> . ID SUBASSIGN expr
    (20) expr -> . ID ADDASSIGN expr
    (21) expr -> . ID = expr
    (22) term -> . INTNUM
    (23) term -> . FLOATNUM
    (24) term -> . EYE ( expr )
    (25) term -> . ONES ( expr )
    (26) term -> . ZEROS ( expr )
    (27) term -> . [ outerlist ]
    ID              shift and go to state 4
    (               shift and go to state 5
    -               shift and go to state 6
    INTNUM          shift and go to state 7
    FLOATNUM        shift and go to state 8
    EYE             shift and go to state 9
    ONES            shift and go to state 10
    ZEROS           shift and go to state 11
    [               shift and go to state 12

    expr                           shift and go to state 42
    term                           shift and go to state 3

state 22

    (16) expr -> expr + . expr
    (5) expr -> . term
    (6) expr -> . ID
    (7) expr -> . ( expr )
    (8) expr -> . - expr
    (9) expr -> . expr DOTDIV expr
    (10) expr -> . expr DOTMUL expr
    (11) expr -> . expr DOTSUB expr
    (12) expr -> . expr DOTADD expr
    (13) expr -> . expr / expr
    (14) expr -> . expr * expr
    (15) expr -> . expr - expr
    (16) expr -> . expr + expr
    (17) expr -> . ID DIVASSIGN expr
    (18) expr -> . ID MULASSIGN expr
    (19) expr -> . ID SUBASSIGN expr
    (20) expr -> . ID ADDASSIGN expr
    (21) expr -> . ID = expr
    (22) term -> . INTNUM
    (23) term -> . FLOATNUM
    (24) term -> . EYE ( expr )
    (25) term -> . ONES ( expr )
    (26) term -> . ZEROS ( expr )
    (27) term -> . [ outerlist ]
    ID              shift and go to state 4
    (               shift and go to state 5
    -               shift and go to state 6
    INTNUM          shift and go to state 7
    FLOATNUM        shift and go to state 8
    EYE             shift and go to state 9
    ONES            shift and go to state 10
    ZEROS           shift and go to state 11
    [               shift and go to state 12

    expr                           shift and go to state 43
    term                           shift and go to state 3

state 23

    (17) expr -> ID DIVASSIGN . expr
    (5) expr -> . term
    (6) expr -> . ID
    (7) expr -> . ( expr )
    (8) expr -> . - expr
    (9) expr -> . expr DOTDIV expr
    (10) expr -> . expr DOTMUL expr
    (11) expr -> . expr DOTSUB expr
    (12) expr -> . expr DOTADD expr
    (13) expr -> . expr / expr
    (14) expr -> . expr * expr
    (15) expr -> . expr - expr
    (16) expr -> . expr + expr
    (17) expr -> . ID DIVASSIGN expr
    (18) expr -> . ID MULASSIGN expr
    (19) expr -> . ID SUBASSIGN expr
    (20) expr -> . ID ADDASSIGN expr
    (21) expr -> . ID = expr
    (22) term -> . INTNUM
    (23) term -> . FLOATNUM
    (24) term -> . EYE ( expr )
    (25) term -> . ONES ( expr )
    (26) term -> . ZEROS ( expr )
    (27) term -> . [ outerlist ]
    ID              shift and go to state 4
    (               shift and go to state 5
    -               shift and go to state 6
    INTNUM          shift and go to state 7
    FLOATNUM        shift and go to state 8
    EYE             shift and go to state 9
    ONES            shift and go to state 10
    ZEROS           shift and go to state 11
    [               shift and go to state 12

    expr                           shift and go to state 44
    term                           shift and go to state 3

state 24

    (18) expr -> ID MULASSIGN . expr
    (5) expr -> . term
    (6) expr -> . ID
    (7) expr -> . ( expr )
    (8) expr -> . - expr
    (9) expr -> . expr DOTDIV expr
    (10) expr -> . expr DOTMUL expr
    (11) expr -> . expr DOTSUB expr
    (12) expr -> . expr DOTADD expr
    (13) expr -> . expr / expr
    (14) expr -> . expr * expr
    (15) expr -> . expr - expr
    (16) expr -> . expr + expr
    (17) expr -> . ID DIVASSIGN expr
    (18) expr -> . ID MULASSIGN expr
    (19) expr -> . ID SUBASSIGN expr
    (20) expr -> . ID ADDASSIGN expr
    (21) expr -> . ID = expr
    (22) term -> . INTNUM
    (23) term -> . FLOATNUM
    (24) term -> . EYE ( expr )
    (25) term -> . ONES ( expr )
    (26) term -> . ZEROS ( expr )
    (27) term -> . [ outerlist ]
    ID              shift and go to state 4
    (               shift and go to state 5
    -               shift and go to state 6
    INTNUM          shift and go to state 7
    FLOATNUM        shift and go to state 8
    EYE             shift and go to state 9
    ONES            shift and go to state 10
    ZEROS           shift and go to state 11
    [               shift and go to state 12

    expr                           shift and go to state 45
    term                           shift and go to state 3

state 25

    (19) expr -> ID SUBASSIGN . expr
    (5) expr -> . term
    (6) expr -> . ID
    (7) expr -> . ( expr )
    (8) expr -> . - expr
    (9) expr -> . expr DOTDIV expr
    (10) expr -> . expr DOTMUL expr
    (11) expr -> . expr DOTSUB expr
    (12) expr -> . expr DOTADD expr
    (13) expr -> . expr / expr
    (14) expr -> . expr * expr
    (15) expr -> . expr - expr
    (16) expr -> . expr + expr
    (17) expr -> . ID DIVASSIGN expr
    (18) expr -> . ID MULASSIGN expr
    (19) expr -> . ID SUBASSIGN expr
    (20) expr -> . ID ADDASSIGN expr
    (21) expr -> . ID = expr
    (22) term -> . INTNUM
    (23) term -> . FLOATNUM
    (24) term -> . EYE ( expr )
    (25) term -> . ONES ( expr )
    (26) term -> . ZEROS ( expr )
    (27) term -> . [ outerlist ]
    ID              shift and go to state 4
    (               shift and go to state 5
    -               shift and go to state 6
    INTNUM          shift and go to state 7
    FLOATNUM        shift and go to state 8
    EYE             shift and go to state 9
    ONES            shift and go to state 10
    ZEROS           shift and go to state 11
    [               shift and go to state 12

    expr                           shift and go to state 46
    term                           shift and go to state 3

state 26

    (20) expr -> ID ADDASSIGN . expr
    (5) expr -> . term
    (6) expr -> . ID
    (7) expr -> . ( expr )
    (8) expr -> . - expr
    (9) expr -> . expr DOTDIV expr
    (10) expr -> . expr DOTMUL expr
    (11) expr -> . expr DOTSUB expr
    (12) expr -> . expr DOTADD expr
    (13) expr -> . expr / expr
    (14) expr -> . expr * expr
    (15) expr -> . expr - expr
    (16) expr -> . expr + expr
    (17) expr -> . ID DIVASSIGN expr
    (18) expr -> . ID MULASSIGN expr
    (19) expr -> . ID SUBASSIGN expr
    (20) expr -> . ID ADDASSIGN expr
    (21) expr -> . ID = expr
    (22) term -> . INTNUM
    (23) term -> . FLOATNUM
    (24) term -> . EYE ( expr )
    (25) term -> . ONES ( expr )
    (26) term -> . ZEROS ( expr )
    (27) term -> . [ outerlist ]
    ID              shift and go to state 4
    (               shift and go to state 5
    -               shift and go to state 6
    INTNUM          shift and go to state 7
    FLOATNUM        shift and go to state 8
    EYE             shift and go to state 9
    ONES            shift and go to state 10
    ZEROS           shift and go to state 11
    [               shift and go to state 12

    expr                           shift and go to state 47
    term                           shift and go to state 3

state 27

    (21) expr -> ID = . expr
    (5) expr -> . term
    (6) expr -> . ID
    (7) expr -> . ( expr )
    (8) expr -> . - expr
    (9) expr -> . expr DOTDIV expr
    (10) expr -> . expr DOTMUL expr
    (11) expr -> . expr DOTSUB expr
    (12) expr -> . expr DOTADD expr
    (13) expr -> . expr / expr
    (14) expr -> . expr * expr
    (15) expr -> . expr - expr
    (16) expr -> . expr + expr
    (17) expr -> . ID DIVASSIGN expr
    (18) expr -> . ID MULASSIGN expr
    (19) expr -> . ID SUBASSIGN expr
    (20) expr -> . ID ADDASSIGN expr
    (21) expr -> . ID = expr
    (22) term -> . INTNUM
    (23) term -> . FLOATNUM
    (24) term -> . EYE ( expr )
    (25) term -> . ONES ( expr )
    (26) term -> . ZEROS ( expr )
    (27) term -> . [ outerlist ]
    ID              shift and go to state 4
    (               shift and go to state 5
    -               shift and go to state 6
    INTNUM          shift and go to state 7
    FLOATNUM        shift and go to state 8
    EYE             shift and go to state 9
    ONES            shift and go to state 10
    ZEROS           shift and go to state 11
    [               shift and go to state 12

    expr                           shift and go to state 48
    term                           shift and go to state 3

state 28

    (7) expr -> ( expr . )
    (9) expr -> expr . DOTDIV expr
    (10) expr -> expr . DOTMUL expr
    (11) expr -> expr . DOTSUB expr
    (12) expr -> expr . DOTADD expr
    (13) expr -> expr . / expr
    (14) expr -> expr . * expr
    (15) expr -> expr . - expr
    (16) expr -> expr . + expr
    )               shift and go to state 49
    DOTDIV          shift and go to state 15
    DOTMUL          shift and go to state 16
    DOTSUB          shift and go to state 17
    DOTADD          shift and go to state 18
    /               shift and go to state 19
    *               shift and go to state 20
    -               shift and go to state 21
    +               shift and go to state 22


state 29

    (8) expr -> - expr .
    (9) expr -> expr . DOTDIV expr
    (10) expr -> expr . DOTMUL expr
    (11) expr -> expr . DOTSUB expr
    (12) expr -> expr . DOTADD expr
    (13) expr -> expr . / expr
    (14) expr -> expr . * expr
    (15) expr -> expr . - expr
    (16) expr -> expr . + expr
    ;               reduce using rule 8 (expr -> - expr .)
    DOTDIV          reduce using rule 8 (expr -> - expr .)
    DOTMUL          reduce using rule 8 (expr -> - expr .)
    DOTSUB          reduce using rule 8 (expr -> - expr .)
    DOTADD          reduce using rule 8 (expr -> - expr .)
    /               reduce using rule 8 (expr -> - expr .)
    *               reduce using rule 8 (expr -> - expr .)
    -               reduce using rule 8 (expr -> - expr .)
    +               reduce using rule 8 (expr -> - expr .)
    ID              reduce using rule 8 (expr -> - expr .)
    (               reduce using rule 8 (expr -> - expr .)
    INTNUM          reduce using rule 8 (expr -> - expr .)
    FLOATNUM        reduce using rule 8 (expr -> - expr .)
    EYE             reduce using rule 8 (expr -> - expr .)
    ONES            reduce using rule 8 (expr -> - expr .)
    ZEROS           reduce using rule 8 (expr -> - expr .)
    [               reduce using rule 8 (expr -> - expr .)
    $end            reduce using rule 8 (expr -> - expr .)
    )               reduce using rule 8 (expr -> - expr .)
    ]               reduce using rule 8 (expr -> - expr .)
    ,               reduce using rule 8 (expr -> - expr .)


state 30

    (24) term -> EYE ( . expr )
    (5) expr -> . term
    (6) expr -> . ID
    (7) expr -> . ( expr )
    (8) expr -> . - expr
    (9) expr -> . expr DOTDIV expr
    (10) expr -> . expr DOTMUL expr
    (11) expr -> . expr DOTSUB expr
    (12) expr -> . expr DOTADD expr
    (13) expr -> . expr / expr
    (14) expr -> . expr * expr
    (15) expr -> . expr - expr
    (16) expr -> . expr + expr
    (17) expr -> . ID DIVASSIGN expr
    (18) expr -> . ID MULASSIGN expr
    (19) expr -> . ID SUBASSIGN expr
    (20) expr -> . ID ADDASSIGN expr
    (21) expr -> . ID = expr
    (22) term -> . INTNUM
    (23) term -> . FLOATNUM
    (24) term -> . EYE ( expr )
    (25) term -> . ONES ( expr )
    (26) term -> . ZEROS ( expr )
    (27) term -> . [ outerlist ]
    ID              shift and go to state 4
    (               shift and go to state 5
    -               shift and go to state 6
    INTNUM          shift and go to state 7
    FLOATNUM        shift and go to state 8
    EYE             shift and go to state 9
    ONES            shift and go to state 10
    ZEROS           shift and go to state 11
    [               shift and go to state 12

    expr                           shift and go to state 50
    term                           shift and go to state 3

state 31

    (25) term -> ONES ( . expr )
    (5) expr -> . term
    (6) expr -> . ID
    (7) expr -> . ( expr )
    (8) expr -> . - expr
    (9) expr -> . expr DOTDIV expr
    (10) expr -> . expr DOTMUL expr
    (11) expr -> . expr DOTSUB expr
    (12) expr -> . expr DOTADD expr
    (13) expr -> . expr / expr
    (14) expr -> . expr * expr
    (15) expr -> . expr - expr
    (16) expr -> . expr + expr
    (17) expr -> . ID DIVASSIGN expr
    (18) expr -> . ID MULASSIGN expr
    (19) expr -> . ID SUBASSIGN expr
    (20) expr -> . ID ADDASSIGN expr
    (21) expr -> . ID = expr
    (22) term -> . INTNUM
    (23) term -> . FLOATNUM
    (24) term -> . EYE ( expr )
    (25) term -> . ONES ( expr )
    (26) term -> . ZEROS ( expr )
    (27) term -> . [ outerlist ]
    ID              shift and go to state 4
    (               shift and go to state 5
    -               shift and go to state 6
    INTNUM          shift and go to state 7
    FLOATNUM        shift and go to state 8
    EYE             shift and go to state 9
    ONES            shift and go to state 10
    ZEROS           shift and go to state 11
    [               shift and go to state 12

    expr                           shift and go to state 51
    term                           shift and go to state 3

state 32

    (26) term -> ZEROS ( . expr )
    (5) expr -> . term
    (6) expr -> . ID
    (7) expr -> . ( expr )
    (8) expr -> . - expr
    (9) expr -> . expr DOTDIV expr
    (10) expr -> . expr DOTMUL expr
    (11) expr -> . expr DOTSUB expr
    (12) expr -> . expr DOTADD expr
    (13) expr -> . expr / expr
    (14) expr -> . expr * expr
    (15) expr -> . expr - expr
    (16) expr -> . expr + expr
    (17) expr -> . ID DIVASSIGN expr
    (18) expr -> . ID MULASSIGN expr
    (19) expr -> . ID SUBASSIGN expr
    (20) expr -> . ID ADDASSIGN expr
    (21) expr -> . ID = expr
    (22) term -> . INTNUM
    (23) term -> . FLOATNUM
    (24) term -> . EYE ( expr )
    (25) term -> . ONES ( expr )
    (26) term -> . ZEROS ( expr )
    (27) term -> . [ outerlist ]
    ID              shift and go to state 4
    (               shift and go to state 5
    -               shift and go to state 6
    INTNUM          shift and go to state 7
    FLOATNUM        shift and go to state 8
    EYE             shift and go to state 9
    ONES            shift and go to state 10
    ZEROS           shift and go to state 11
    [               shift and go to state 12

    expr                           shift and go to state 52
    term                           shift and go to state 3

state 33

    (28) outerlist -> [ . innerlist ]
    (30) innerlist -> . expr
    (31) innerlist -> . innerlist , expr
    (5) expr -> . term
    (6) expr -> . ID
    (7) expr -> . ( expr )
    (8) expr -> . - expr
    (9) expr -> . expr DOTDIV expr
    (10) expr -> . expr DOTMUL expr
    (11) expr -> . expr DOTSUB expr
    (12) expr -> . expr DOTADD expr
    (13) expr -> . expr / expr
    (14) expr -> . expr * expr
    (15) expr -> . expr - expr
    (16) expr -> . expr + expr
    (17) expr -> . ID DIVASSIGN expr
    (18) expr -> . ID MULASSIGN expr
    (19) expr -> . ID SUBASSIGN expr
    (20) expr -> . ID ADDASSIGN expr
    (21) expr -> . ID = expr
    (22) term -> . INTNUM
    (23) term -> . FLOATNUM
    (24) term -> . EYE ( expr )
    (25) term -> . ONES ( expr )
    (26) term -> . ZEROS ( expr )
    (27) term -> . [ outerlist ]
    ID              shift and go to state 4
    (               shift and go to state 5
    -               shift and go to state 6
    INTNUM          shift and go to state 7
    FLOATNUM        shift and go to state 8
    EYE             shift and go to state 9
    ONES            shift and go to state 10
    ZEROS           shift and go to state 11
    [               shift and go to state 12

    innerlist                      shift and go to state 53
    expr                           shift and go to state 54
    term                           shift and go to state 3

state 34

    (27) term -> [ outerlist . ]
    (29) outerlist -> outerlist . , [ innerlist ]
    ]               shift and go to state 55
    ,               shift and go to state 56


state 35

    (4) expr_set -> expr_set expr ; .
    ID              reduce using rule 4 (expr_set -> expr_set expr ; .)
    (               reduce using rule 4 (expr_set -> expr_set expr ; .)
    -               reduce using rule 4 (expr_set -> expr_set expr ; .)
    INTNUM          reduce using rule 4 (expr_set -> expr_set expr ; .)
    FLOATNUM        reduce using rule 4 (expr_set -> expr_set expr ; .)
    EYE             reduce using rule 4 (expr_set -> expr_set expr ; .)
    ONES            reduce using rule 4 (expr_set -> expr_set expr ; .)
    ZEROS           reduce using rule 4 (expr_set -> expr_set expr ; .)
    [               reduce using rule 4 (expr_set -> expr_set expr ; .)
    $end            reduce using rule 4 (expr_set -> expr_set expr ; .)


state 36

    (9) expr -> expr DOTDIV expr .
    (9) expr -> expr . DOTDIV expr
    (10) expr -> expr . DOTMUL expr
    (11) expr -> expr . DOTSUB expr
    (12) expr -> expr . DOTADD expr
    (13) expr -> expr . / expr
    (14) expr -> expr . * expr
    (15) expr -> expr . - expr
    (16) expr -> expr . + expr
    ;               reduce using rule 9 (expr -> expr DOTDIV expr .)
    DOTDIV          reduce using rule 9 (expr -> expr DOTDIV expr .)
    DOTMUL          reduce using rule 9 (expr -> expr DOTDIV expr .)
    DOTSUB          reduce using rule 9 (expr -> expr DOTDIV expr .)
    DOTADD          reduce using rule 9 (expr -> expr DOTDIV expr .)
    /               reduce using rule 9 (expr -> expr DOTDIV expr .)
    *               reduce using rule 9 (expr -> expr DOTDIV expr .)
    -               reduce using rule 9 (expr -> expr DOTDIV expr .)
    +               reduce using rule 9 (expr -> expr DOTDIV expr .)
    ID              reduce using rule 9 (expr -> expr DOTDIV expr .)
    (               reduce using rule 9 (expr -> expr DOTDIV expr .)
    INTNUM          reduce using rule 9 (expr -> expr DOTDIV expr .)
    FLOATNUM        reduce using rule 9 (expr -> expr DOTDIV expr .)
    EYE             reduce using rule 9 (expr -> expr DOTDIV expr .)
    ONES            reduce using rule 9 (expr -> expr DOTDIV expr .)
    ZEROS           reduce using rule 9 (expr -> expr DOTDIV expr .)
    [               reduce using rule 9 (expr -> expr DOTDIV expr .)
    $end            reduce using rule 9 (expr -> expr DOTDIV expr .)
    )               reduce using rule 9 (expr -> expr DOTDIV expr .)
    ]               reduce using rule 9 (expr -> expr DOTDIV expr .)
    ,               reduce using rule 9 (expr -> expr DOTDIV expr .)


state 37

    (10) expr -> expr DOTMUL expr .
    (9) expr -> expr . DOTDIV expr
    (10) expr -> expr . DOTMUL expr
    (11) expr -> expr . DOTSUB expr
    (12) expr -> expr . DOTADD expr
    (13) expr -> expr . / expr
    (14) expr -> expr . * expr
    (15) expr -> expr . - expr
    (16) expr -> expr . + expr
    ;               reduce using rule 10 (expr -> expr DOTMUL expr .)
    DOTDIV          reduce using rule 10 (expr -> expr DOTMUL expr .)
    DOTMUL          reduce using rule 10 (expr -> expr DOTMUL expr .)
    DOTSUB          reduce using rule 10 (expr -> expr DOTMUL expr .)
    DOTADD          reduce using rule 10 (expr -> expr DOTMUL expr .)
    /               reduce using rule 10 (expr -> expr DOTMUL expr .)
    *               reduce using rule 10 (expr -> expr DOTMUL expr .)
    -               reduce using rule 10 (expr -> expr DOTMUL expr .)
    +               reduce using rule 10 (expr -> expr DOTMUL expr .)
    ID              reduce using rule 10 (expr -> expr DOTMUL expr .)
    (               reduce using rule 10 (expr -> expr DOTMUL expr .)
    INTNUM          reduce using rule 10 (expr -> expr DOTMUL expr .)
    FLOATNUM        reduce using rule 10 (expr -> expr DOTMUL expr .)
    EYE             reduce using rule 10 (expr -> expr DOTMUL expr .)
    ONES            reduce using rule 10 (expr -> expr DOTMUL expr .)
    ZEROS           reduce using rule 10 (expr -> expr DOTMUL expr .)
    [               reduce using rule 10 (expr -> expr DOTMUL expr .)
    $end            reduce using rule 10 (expr -> expr DOTMUL expr .)
    )               reduce using rule 10 (expr -> expr DOTMUL expr .)
    ]               reduce using rule 10 (expr -> expr DOTMUL expr .)
    ,               reduce using rule 10 (expr -> expr DOTMUL expr .)


state 38

    (11) expr -> expr DOTSUB expr .
    (9) expr -> expr . DOTDIV expr
    (10) expr -> expr . DOTMUL expr
    (11) expr -> expr . DOTSUB expr
    (12) expr -> expr . DOTADD expr
    (13) expr -> expr . / expr
    (14) expr -> expr . * expr
    (15) expr -> expr . - expr
    (16) expr -> expr . + expr
    ;               reduce using rule 11 (expr -> expr DOTSUB expr .)
    DOTSUB          reduce using rule 11 (expr -> expr DOTSUB expr .)
    DOTADD          reduce using rule 11 (expr -> expr DOTSUB expr .)
    -               reduce using rule 11 (expr -> expr DOTSUB expr .)
    +               reduce using rule 11 (expr -> expr DOTSUB expr .)
    ID              reduce using rule 11 (expr -> expr DOTSUB expr .)
    (               reduce using rule 11 (expr -> expr DOTSUB expr .)
    INTNUM          reduce using rule 11 (expr -> expr DOTSUB expr .)
    FLOATNUM        reduce using rule 11 (expr -> expr DOTSUB expr .)
    EYE             reduce using rule 11 (expr -> expr DOTSUB expr .)
    ONES            reduce using rule 11 (expr -> expr DOTSUB expr .)
    ZEROS           reduce using rule 11 (expr -> expr DOTSUB expr .)
    [               reduce using rule 11 (expr -> expr DOTSUB expr .)
    $end            reduce using rule 11 (expr -> expr DOTSUB expr .)
    )               reduce using rule 11 (expr -> expr DOTSUB expr .)
    ]               reduce using rule 11 (expr -> expr DOTSUB expr .)
    ,               reduce using rule 11 (expr -> expr DOTSUB expr .)
    DOTDIV          shift and go to state 15
    DOTMUL          shift and go to state 16
    /               shift and go to state 19
    *               shift and go to state 20


state 39

    (12) expr -> expr DOTADD expr .
    (9) expr -> expr . DOTDIV expr
    (10) expr -> expr . DOTMUL expr
    (11) expr -> expr . DOTSUB expr
    (12) expr -> expr . DOTADD expr
    (13) expr -> expr . / expr
    (14) expr -> expr . * expr
    (15) expr -> expr . - expr
    (16) expr -> expr . + expr
    ;               reduce using rule 12 (expr -> expr DOTADD expr .)
    DOTSUB          reduce using rule 12 (expr -> expr DOTADD expr .)
    DOTADD          reduce using rule 12 (expr -> expr DOTADD expr .)
    -               reduce using rule 12 (expr -> expr DOTADD expr .)
    +               reduce using rule 12 (expr -> expr DOTADD expr .)
    ID              reduce using rule 12 (expr -> expr DOTADD expr .)
    (               reduce using rule 12 (expr -> expr DOTADD expr .)
    INTNUM          reduce using rule 12 (expr -> expr DOTADD expr .)
    FLOATNUM        reduce using rule 12 (expr -> expr DOTADD expr .)
    EYE             reduce using rule 12 (expr -> expr DOTADD expr .)
    ONES            reduce using rule 12 (expr -> expr DOTADD expr .)
    ZEROS           reduce using rule 12 (expr -> expr DOTADD expr .)
    [               reduce using rule 12 (expr -> expr DOTADD expr .)
    $end            reduce using rule 12 (expr -> expr DOTADD expr .)
    )               reduce using rule 12 (expr -> expr DOTADD expr .)
    ]               reduce using rule 12 (expr -> expr DOTADD expr .)
    ,               reduce using rule 12 (expr -> expr DOTADD expr .)
    DOTDIV          shift and go to state 15
    DOTMUL          shift and go to state 16
    /               shift and go to state 19
    *               shift and go to state 20


state 40

    (13) expr -> expr / expr .
    (9) expr -> expr . DOTDIV expr
    (10) expr -> expr . DOTMUL expr
    (11) expr -> expr . DOTSUB expr
    (12) expr -> expr . DOTADD expr
    (13) expr -> expr . / expr
    (14) expr -> expr . * expr
    (15) expr -> expr . - expr
    (16) expr -> expr . + expr
    ;               reduce using rule 13 (expr -> expr / expr .)
    DOTDIV          reduce using rule 13 (expr -> expr / expr .)
    DOTMUL          reduce using rule 13 (expr -> expr / expr .)
    DOTSUB          reduce using rule 13 (expr -> expr / expr .)
    DOTADD          reduce using rule 13 (expr -> expr / expr .)
    /               reduce using rule 13 (expr -> expr / expr .)
    *               reduce using rule 13 (expr -> expr / expr .)
    -               reduce using rule 13 (expr -> expr / expr .)
    +               reduce using rule 13 (expr -> expr / expr .)
    ID              reduce using rule 13 (expr -> expr / expr .)
    (               reduce using rule 13 (expr -> expr / expr .)
    INTNUM          reduce using rule 13 (expr -> expr / expr .)
    FLOATNUM        reduce using rule 13 (expr -> expr / expr .)
    EYE             reduce using rule 13 (expr -> expr / expr .)
    ONES            reduce using rule 13 (expr -> expr / expr .)
    ZEROS           reduce using rule 13 (expr -> expr / expr .)
    [               reduce using rule 13 (expr -> expr / expr .)
    $end            reduce using rule 13 (expr -> expr / expr .)
    )               reduce using rule 13 (expr -> expr / expr .)
    ]               reduce using rule 13 (expr -> expr / expr .)
    ,               reduce using rule 13 (expr -> expr / expr .)


state 41

    (14) expr -> expr * expr .
    (9) expr -> expr . DOTDIV expr
    (10) expr -> expr . DOTMUL expr
    (11) expr -> expr . DOTSUB expr
    (12) expr -> expr . DOTADD expr
    (13) expr -> expr . / expr
    (14) expr -> expr . * expr
    (15) expr -> expr . - expr
    (16) expr -> expr . + expr
    ;               reduce using rule 14 (expr -> expr * expr .)
    DOTDIV          reduce using rule 14 (expr -> expr * expr .)
    DOTMUL          reduce using rule 14 (expr -> expr * expr .)
    DOTSUB          reduce using rule 14 (expr -> expr * expr .)
    DOTADD          reduce using rule 14 (expr -> expr * expr .)
    /               reduce using rule 14 (expr -> expr * expr .)
    *               reduce using rule 14 (expr -> expr * expr .)
    -               reduce using rule 14 (expr -> expr * expr .)
    +               reduce using rule 14 (expr -> expr * expr .)
    ID              reduce using rule 14 (expr -> expr * expr .)
    (               reduce using rule 14 (expr -> expr * expr .)
    INTNUM          reduce using rule 14 (expr -> expr * expr .)
    FLOATNUM        reduce using rule 14 (expr -> expr * expr .)
    EYE             reduce using rule 14 (expr -> expr * expr .)
    ONES            reduce using rule 14 (expr -> expr * expr .)
    ZEROS           reduce using rule 14 (expr -> expr * expr .)
    [               reduce using rule 14 (expr -> expr * expr .)
    $end            reduce using rule 14 (expr -> expr * expr .)
    )               reduce using rule 14 (expr -> expr * expr .)
    ]               reduce using rule 14 (expr -> expr * expr .)
    ,               reduce using rule 14 (expr -> expr * expr .)


state 42

    (15) expr -> expr - expr .
    (9) expr -> expr . DOTDIV expr
    (10) expr -> expr . DOTMUL expr
    (11) expr -> expr . DOTSUB expr
    (12) expr -> expr . DOTADD expr
    (13) expr -> expr . / expr
    (14) expr -> expr . * expr
    (15) expr -> expr . - expr
    (16) expr -> expr . + expr
    ;               reduce using rule 15 (expr -> expr - expr .)
    DOTSUB          reduce using rule 15 (expr -> expr - expr .)
    DOTADD          reduce using rule 15 (expr -> expr - expr .)
    -               reduce using rule 15 (expr -> expr - expr .)
    +               reduce using rule 15 (expr -> expr - expr .)
    ID              reduce using rule 15 (expr -> expr - expr .)
    (               reduce using rule 15 (expr -> expr - expr .)
    INTNUM          reduce using rule 15 (expr -> expr - expr .)
    FLOATNUM        reduce using rule 15 (expr -> expr - expr .)
    EYE             reduce using rule 15 (expr -> expr - expr .)
    ONES            reduce using rule 15 (expr -> expr - expr .)
    ZEROS           reduce using rule 15 (expr -> expr - expr .)
    [               reduce using rule 15 (expr -> expr - expr .)
    $end            reduce using rule 15 (expr -> expr - expr .)
    )               reduce using rule 15 (expr -> expr - expr .)
    ]               reduce using rule 15 (expr -> expr - expr .)
    ,               reduce using rule 15 (expr -> expr - expr .)
    DOTDIV          shift and go to state 15
    DOTMUL          shift and go to state 16
    /               shift and go to state 19
    *               shift and go to state 20


state 43

    (16) expr -> expr + expr .
    (9) expr -> expr . DOTDIV expr
    (10) expr -> expr . DOTMUL expr
    (11) expr -> expr . DOTSUB expr
    (12) expr -> expr . DOTADD expr
    (13) expr -> expr . / expr
    (14) expr -> expr . * expr
    (15) expr -> expr . - expr
    (16) expr -> expr . + expr
    ;               reduce using rule 16 (expr -> expr + expr .)
    DOTSUB          reduce using rule 16 (expr -> expr + expr .)
    DOTADD          reduce using rule 16 (expr -> expr + expr .)
    -               reduce using rule 16 (expr -> expr + expr .)
    +               reduce using rule 16 (expr -> expr + expr .)
    ID              reduce using rule 16 (expr -> expr + expr .)
    (               reduce using rule 16 (expr -> expr + expr .)
    INTNUM          reduce using rule 16 (expr -> expr + expr .)
    FLOATNUM        reduce using rule 16 (expr -> expr + expr .)
    EYE             reduce using rule 16 (expr -> expr + expr .)
    ONES            reduce using rule 16 (expr -> expr + expr .)
    ZEROS           reduce using rule 16 (expr -> expr + expr .)
    [               reduce using rule 16 (expr -> expr + expr .)
    $end            reduce using rule 16 (expr -> expr + expr .)
    )               reduce using rule 16 (expr -> expr + expr .)
    ]               reduce using rule 16 (expr -> expr + expr .)
    ,               reduce using rule 16 (expr -> expr + expr .)
    DOTDIV          shift and go to state 15
    DOTMUL          shift and go to state 16
    /               shift and go to state 19
    *               shift and go to state 20


state 44

    (17) expr -> ID DIVASSIGN expr .
    (9) expr -> expr . DOTDIV expr
    (10) expr -> expr . DOTMUL expr
    (11) expr -> expr . DOTSUB expr
    (12) expr -> expr . DOTADD expr
    (13) expr -> expr . / expr
    (14) expr -> expr . * expr
    (15) expr -> expr . - expr
    (16) expr -> expr . + expr
    ;               reduce using rule 17 (expr -> ID DIVASSIGN expr .)
    ID              reduce using rule 17 (expr -> ID DIVASSIGN expr .)
    (               reduce using rule 17 (expr -> ID DIVASSIGN expr .)
    INTNUM          reduce using rule 17 (expr -> ID DIVASSIGN expr .)
    FLOATNUM        reduce using rule 17 (expr -> ID DIVASSIGN expr .)
    EYE             reduce using rule 17 (expr -> ID DIVASSIGN expr .)
    ONES            reduce using rule 17 (expr -> ID DIVASSIGN expr .)
    ZEROS           reduce using rule 17 (expr -> ID DIVASSIGN expr .)
    [               reduce using rule 17 (expr -> ID DIVASSIGN expr .)
    $end            reduce using rule 17 (expr -> ID DIVASSIGN expr .)
    )               reduce using rule 17 (expr -> ID DIVASSIGN expr .)
    ]               reduce using rule 17 (expr -> ID DIVASSIGN expr .)
    ,               reduce using rule 17 (expr -> ID DIVASSIGN expr .)
    DOTDIV          shift and go to state 15
    DOTMUL          shift and go to state 16
    DOTSUB          shift and go to state 17
    DOTADD          shift and go to state 18
    /               shift and go to state 19
    *               shift and go to state 20
    -               shift and go to state 21
    +               shift and go to state 22


state 45

    (18) expr -> ID MULASSIGN expr .
    (9) expr -> expr . DOTDIV expr
    (10) expr -> expr . DOTMUL expr
    (11) expr -> expr . DOTSUB expr
    (12) expr -> expr . DOTADD expr
    (13) expr -> expr . / expr
    (14) expr -> expr . * expr
    (15) expr -> expr . - expr
    (16) expr -> expr . + expr
    ;               reduce using rule 18 (expr -> ID MULASSIGN expr .)
    ID              reduce using rule 18 (expr -> ID MULASSIGN expr .)
    (               reduce using rule 18 (expr -> ID MULASSIGN expr .)
    INTNUM          reduce using rule 18 (expr -> ID MULASSIGN expr .)
    FLOATNUM        reduce using rule 18 (expr -> ID MULASSIGN expr .)
    EYE             reduce using rule 18 (expr -> ID MULASSIGN expr .)
    ONES            reduce using rule 18 (expr -> ID MULASSIGN expr .)
    ZEROS           reduce using rule 18 (expr -> ID MULASSIGN expr .)
    [               reduce using rule 18 (expr -> ID MULASSIGN expr .)
    $end            reduce using rule 18 (expr -> ID MULASSIGN expr .)
    )               reduce using rule 18 (expr -> ID MULASSIGN expr .)
    ]               reduce using rule 18 (expr -> ID MULASSIGN expr .)
    ,               reduce using rule 18 (expr -> ID MULASSIGN expr .)
    DOTDIV          shift and go to state 15
    DOTMUL          shift and go to state 16
    DOTSUB          shift and go to state 17
    DOTADD          shift and go to state 18
    /               shift and go to state 19
    *               shift and go to state 20
    -               shift and go to state 21
    +               shift and go to state 22


state 46

    (19) expr -> ID SUBASSIGN expr .
    (9) expr -> expr . DOTDIV expr
    (10) expr -> expr . DOTMUL expr
    (11) expr -> expr . DOTSUB expr
    (12) expr -> expr . DOTADD expr
    (13) expr -> expr . / expr
    (14) expr -> expr . * expr
    (15) expr -> expr . - expr
    (16) expr -> expr . + expr
    ;               reduce using rule 19 (expr -> ID SUBASSIGN expr .)
    ID              reduce using rule 19 (expr -> ID SUBASSIGN expr .)
    (               reduce using rule 19 (expr -> ID SUBASSIGN expr .)
    INTNUM          reduce using rule 19 (expr -> ID SUBASSIGN expr .)
    FLOATNUM        reduce using rule 19 (expr -> ID SUBASSIGN expr .)
    EYE             reduce using rule 19 (expr -> ID SUBASSIGN expr .)
    ONES            reduce using rule 19 (expr -> ID SUBASSIGN expr .)
    ZEROS           reduce using rule 19 (expr -> ID SUBASSIGN expr .)
    [               reduce using rule 19 (expr -> ID SUBASSIGN expr .)
    $end            reduce using rule 19 (expr -> ID SUBASSIGN expr .)
    )               reduce using rule 19 (expr -> ID SUBASSIGN expr .)
    ]               reduce using rule 19 (expr -> ID SUBASSIGN expr .)
    ,               reduce using rule 19 (expr -> ID SUBASSIGN expr .)
    DOTDIV          shift and go to state 15
    DOTMUL          shift and go to state 16
    DOTSUB          shift and go to state 17
    DOTADD          shift and go to state 18
    /               shift and go to state 19
    *               shift and go to state 20
    -               shift and go to state 21
    +               shift and go to state 22


state 47

    (20) expr -> ID ADDASSIGN expr .
    (9) expr -> expr . DOTDIV expr
    (10) expr -> expr . DOTMUL expr
    (11) expr -> expr . DOTSUB expr
    (12) expr -> expr . DOTADD expr
    (13) expr -> expr . / expr
    (14) expr -> expr . * expr
    (15) expr -> expr . - expr
    (16) expr -> expr . + expr
    ;               reduce using rule 20 (expr -> ID ADDASSIGN expr .)
    ID              reduce using rule 20 (expr -> ID ADDASSIGN expr .)
    (               reduce using rule 20 (expr -> ID ADDASSIGN expr .)
    INTNUM          reduce using rule 20 (expr -> ID ADDASSIGN expr .)
    FLOATNUM        reduce using rule 20 (expr -> ID ADDASSIGN expr .)
    EYE             reduce using rule 20 (expr -> ID ADDASSIGN expr .)
    ONES            reduce using rule 20 (expr -> ID ADDASSIGN expr .)
    ZEROS           reduce using rule 20 (expr -> ID ADDASSIGN expr .)
    [               reduce using rule 20 (expr -> ID ADDASSIGN expr .)
    $end            reduce using rule 20 (expr -> ID ADDASSIGN expr .)
    )               reduce using rule 20 (expr -> ID ADDASSIGN expr .)
    ]               reduce using rule 20 (expr -> ID ADDASSIGN expr .)
    ,               reduce using rule 20 (expr -> ID ADDASSIGN expr .)
    DOTDIV          shift and go to state 15
    DOTMUL          shift and go to state 16
    DOTSUB          shift and go to state 17
    DOTADD          shift and go to state 18
    /               shift and go to state 19
    *               shift and go to state 20
    -               shift and go to state 21
    +               shift and go to state 22


state 48

    (21) expr -> ID = expr .
    (9) expr -> expr . DOTDIV expr
    (10) expr -> expr . DOTMUL expr
    (11) expr -> expr . DOTSUB expr
    (12) expr -> expr . DOTADD expr
    (13) expr -> expr . / expr
    (14) expr -> expr . * expr
    (15) expr -> expr . - expr
    (16) expr -> expr . + expr
    ;               reduce using rule 21 (expr -> ID = expr .)
    ID              reduce using rule 21 (expr -> ID = expr .)
    (               reduce using rule 21 (expr -> ID = expr .)
    INTNUM          reduce using rule 21 (expr -> ID = expr .)
    FLOATNUM        reduce using rule 21 (expr -> ID = expr .)
    EYE             reduce using rule 21 (expr -> ID = expr .)
    ONES            reduce using rule 21 (expr -> ID = expr .)
    ZEROS           reduce using rule 21 (expr -> ID = expr .)
    [               reduce using rule 21 (expr -> ID = expr .)
    $end            reduce using rule 21 (expr -> ID = expr .)
    )               reduce using rule 21 (expr -> ID = expr .)
    ]               reduce using rule 21 (expr -> ID = expr .)
    ,               reduce using rule 21 (expr -> ID = expr .)
    DOTDIV          shift and go to state 15
    DOTMUL          shift and go to state 16
    DOTSUB          shift and go to state 17
    DOTADD          shift and go to state 18
    /               shift and go to state 19
    *               shift and go to state 20
    -               shift and go to state 21
    +               shift and go to state 22


state 49

    (7) expr -> ( expr ) .
    ;               reduce using rule 7 (expr -> ( expr ) .)
    DOTDIV          reduce using rule 7 (expr -> ( expr ) .)
    DOTMUL          reduce using rule 7 (expr -> ( expr ) .)
    DOTSUB          reduce using rule 7 (expr -> ( expr ) .)
    DOTADD          reduce using rule 7 (expr -> ( expr ) .)
    /               reduce using rule 7 (expr -> ( expr ) .)
    *               reduce using rule 7 (expr -> ( expr ) .)
    -               reduce using rule 7 (expr -> ( expr ) .)
    +               reduce using rule 7 (expr -> ( expr ) .)
    ID              reduce using rule 7 (expr -> ( expr ) .)
    (               reduce using rule 7 (expr -> ( expr ) .)
    INTNUM          reduce using rule 7 (expr -> ( expr ) .)
    FLOATNUM        reduce using rule 7 (expr -> ( expr ) .)
    EYE             reduce using rule 7 (expr -> ( expr ) .)
    ONES            reduce using rule 7 (expr -> ( expr ) .)
    ZEROS           reduce using rule 7 (expr -> ( expr ) .)
    [               reduce using rule 7 (expr -> ( expr ) .)
    $end            reduce using rule 7 (expr -> ( expr ) .)
    )               reduce using rule 7 (expr -> ( expr ) .)
    ]               reduce using rule 7 (expr -> ( expr ) .)
    ,               reduce using rule 7 (expr -> ( expr ) .)


state 50

    (24) term -> EYE ( expr . )
    (9) expr -> expr . DOTDIV expr
    (10) expr -> expr . DOTMUL expr
    (11) expr -> expr . DOTSUB expr
    (12) expr -> expr . DOTADD expr
    (13) expr -> expr . / expr
    (14) expr -> expr . * expr
    (15) expr -> expr . - expr
    (16) expr -> expr . + expr
    )               shift and go to state 57
    DOTDIV          shift and go to state 15
    DOTMUL          shift and go to state 16
    DOTSUB          shift and go to state 17
    DOTADD          shift and go to state 18
    /               shift and go to state 19
    *               shift and go to state 20
    -               shift and go to state 21
    +               shift and go to state 22


state 51

    (25) term -> ONES ( expr . )
    (9) expr -> expr . DOTDIV expr
    (10) expr -> expr . DOTMUL expr
    (11) expr -> expr . DOTSUB expr
    (12) expr -> expr . DOTADD expr
    (13) expr -> expr . / expr
    (14) expr -> expr . * expr
    (15) expr -> expr . - expr
    (16) expr -> expr . + expr
    )               shift and go to state 58
    DOTDIV          shift and go to state 15
    DOTMUL          shift and go to state 16
    DOTSUB          shift and go to state 17
    DOTADD          shift and go to state 18
    /               shift and go to state 19
    *               shift and go to state 20
    -               shift and go to state 21
    +               shift and go to state 22


state 52

    (26) term -> ZEROS ( expr . )
    (9) expr -> expr . DOTDIV expr
    (10) expr -> expr . DOTMUL expr
    (11) expr -> expr . DOTSUB expr
    (12) expr -> expr . DOTADD expr
    (13) expr -> expr . / expr
    (14) expr -> expr . * expr
    (15) expr -> expr . - expr
    (16) expr -> expr . + expr
    )               shift and go to state 59
    DOTDIV          shift and go to state 15
    DOTMUL          shift and go to state 16
    DOTSUB          shift and go to state 17
    DOTADD          shift and go to state 18
    /               shift and go to state 19
    *               shift and go to state 20
    -               shift and go to state 21
    +               shift and go to state 22


state 53

    (28) outerlist -> [ innerlist . ]
    (31) innerlist -> innerlist . , expr
    ]               shift and go to state 60
    ,               shift and go to state 61


state 54

    (30) innerlist -> expr .
    (9) expr -> expr . DOTDIV expr
    (10) expr -> expr . DOTMUL expr
    (11) expr -> expr . DOTSUB expr
    (12) expr -> expr . DOTADD expr
    (13) expr -> expr . / expr
    (14) expr -> expr . * expr
    (15) expr -> expr . - expr
    (16) expr -> expr . + expr
    ]               reduce using rule 30 (innerlist -> expr .)
    ,               reduce using rule 30 (innerlist -> expr .)
    DOTDIV          shift and go to state 15
    DOTMUL          shift and go to state 16
    DOTSUB          shift and go to state 17
    DOTADD          shift and go to state 18
    /               shift and go to state 19
    *               shift and go to state 20
    -               shift and go to state 21
    +               shift and go to state 22


state 55

    (27) term -> [ outerlist ] .
    ;               reduce using rule 27 (term -> [ outerlist ] .)
    DOTDIV          reduce using rule 27 (term -> [ outerlist ] .)
    DOTMUL          reduce using rule 27 (term -> [ outerlist ] .)
    DOTSUB          reduce using rule 27 (term -> [ outerlist ] .)
    DOTADD          reduce using rule 27 (term -> [ outerlist ] .)
    /               reduce using rule 27 (term -> [ outerlist ] .)
    *               reduce using rule 27 (term -> [ outerlist ] .)
    -               reduce using rule 27 (term -> [ outerlist ] .)
    +               reduce using rule 27 (term -> [ outerlist ] .)
    ID              reduce using rule 27 (term -> [ outerlist ] .)
    (               reduce using rule 27 (term -> [ outerlist ] .)
    INTNUM          reduce using rule 27 (term -> [ outerlist ] .)
    FLOATNUM        reduce using rule 27 (term -> [ outerlist ] .)
    EYE             reduce using rule 27 (term -> [ outerlist ] .)
    ONES            reduce using rule 27 (term -> [ outerlist ] .)
    ZEROS           reduce using rule 27 (term -> [ outerlist ] .)
    [               reduce using rule 27 (term -> [ outerlist ] .)
    $end            reduce using rule 27 (term -> [ outerlist ] .)
    )               reduce using rule 27 (term -> [ outerlist ] .)
    ]               reduce using rule 27 (term -> [ outerlist ] .)
    ,               reduce using rule 27 (term -> [ outerlist ] .)


state 56

    (29) outerlist -> outerlist , . [ innerlist ]
    [               shift and go to state 62


state 57

    (24) term -> EYE ( expr ) .
    ;               reduce using rule 24 (term -> EYE ( expr ) .)
    DOTDIV          reduce using rule 24 (term -> EYE ( expr ) .)
    DOTMUL          reduce using rule 24 (term -> EYE ( expr ) .)
    DOTSUB          reduce using rule 24 (term -> EYE ( expr ) .)
    DOTADD          reduce using rule 24 (term -> EYE ( expr ) .)
    /               reduce using rule 24 (term -> EYE ( expr ) .)
    *               reduce using rule 24 (term -> EYE ( expr ) .)
    -               reduce using rule 24 (term -> EYE ( expr ) .)
    +               reduce using rule 24 (term -> EYE ( expr ) .)
    ID              reduce using rule 24 (term -> EYE ( expr ) .)
    (               reduce using rule 24 (term -> EYE ( expr ) .)
    INTNUM          reduce using rule 24 (term -> EYE ( expr ) .)
    FLOATNUM        reduce using rule 24 (term -> EYE ( expr ) .)
    EYE             reduce using rule 24 (term -> EYE ( expr ) .)
    ONES            reduce using rule 24 (term -> EYE ( expr ) .)
    ZEROS           reduce using rule 24 (term -> EYE ( expr ) .)
    [               reduce using rule 24 (term -> EYE ( expr ) .)
    $end            reduce using rule 24 (term -> EYE ( expr ) .)
    )               reduce using rule 24 (term -> EYE ( expr ) .)
    ]               reduce using rule 24 (term -> EYE ( expr ) .)
    ,               reduce using rule 24 (term -> EYE ( expr ) .)


state 58

    (25) term -> ONES ( expr ) .
    ;               reduce using rule 25 (term -> ONES ( expr ) .)
    DOTDIV          reduce using rule 25 (term -> ONES ( expr ) .)
    DOTMUL          reduce using rule 25 (term -> ONES ( expr ) .)
    DOTSUB          reduce using rule 25 (term -> ONES ( expr ) .)
    DOTADD          reduce using rule 25 (term -> ONES ( expr ) .)
    /               reduce using rule 25 (term -> ONES ( expr ) .)
    *               reduce using rule 25 (term -> ONES ( expr ) .)
    -               reduce using rule 25 (term -> ONES ( expr ) .)
    +               reduce using rule 25 (term -> ONES ( expr ) .)
    ID              reduce using rule 25 (term -> ONES ( expr ) .)
    (               reduce using rule 25 (term -> ONES ( expr ) .)
    INTNUM          reduce using rule 25 (term -> ONES ( expr ) .)
    FLOATNUM        reduce using rule 25 (term -> ONES ( expr ) .)
    EYE             reduce using rule 25 (term -> ONES ( expr ) .)
    ONES            reduce using rule 25 (term -> ONES ( expr ) .)
    ZEROS           reduce using rule 25 (term -> ONES ( expr ) .)
    [               reduce using rule 25 (term -> ONES ( expr ) .)
    $end            reduce using rule 25 (term -> ONES ( expr ) .)
    )               reduce using rule 25 (term -> ONES ( expr ) .)
    ]               reduce using rule 25 (term -> ONES ( expr ) .)
    ,               reduce using rule 25 (term -> ONES ( expr ) .)


state 59

    (26) term -> ZEROS ( expr ) .
    ;               reduce using rule 26 (term -> ZEROS ( expr ) .)
    DOTDIV          reduce using rule 26 (term -> ZEROS ( expr ) .)
    DOTMUL          reduce using rule 26 (term -> ZEROS ( expr ) .)
    DOTSUB          reduce using rule 26 (term -> ZEROS ( expr ) .)
    DOTADD          reduce using rule 26 (term -> ZEROS ( expr ) .)
    /               reduce using rule 26 (term -> ZEROS ( expr ) .)
    *               reduce using rule 26 (term -> ZEROS ( expr ) .)
    -               reduce using rule 26 (term -> ZEROS ( expr ) .)
    +               reduce using rule 26 (term -> ZEROS ( expr ) .)
    ID              reduce using rule 26 (term -> ZEROS ( expr ) .)
    (               reduce using rule 26 (term -> ZEROS ( expr ) .)
    INTNUM          reduce using rule 26 (term -> ZEROS ( expr ) .)
    FLOATNUM        reduce using rule 26 (term -> ZEROS ( expr ) .)
    EYE             reduce using rule 26 (term -> ZEROS ( expr ) .)
    ONES            reduce using rule 26 (term -> ZEROS ( expr ) .)
    ZEROS           reduce using rule 26 (term -> ZEROS ( expr ) .)
    [               reduce using rule 26 (term -> ZEROS ( expr ) .)
    $end            reduce using rule 26 (term -> ZEROS ( expr ) .)
    )               reduce using rule 26 (term -> ZEROS ( expr ) .)
    ]               reduce using rule 26 (term -> ZEROS ( expr ) .)
    ,               reduce using rule 26 (term -> ZEROS ( expr ) .)


state 60

    (28) outerlist -> [ innerlist ] .
    ]               reduce using rule 28 (outerlist -> [ innerlist ] .)
    ,               reduce using rule 28 (outerlist -> [ innerlist ] .)


state 61

    (31) innerlist -> innerlist , . expr
    (5) expr -> . term
    (6) expr -> . ID
    (7) expr -> . ( expr )
    (8) expr -> . - expr
    (9) expr -> . expr DOTDIV expr
    (10) expr -> . expr DOTMUL expr
    (11) expr -> . expr DOTSUB expr
    (12) expr -> . expr DOTADD expr
    (13) expr -> . expr / expr
    (14) expr -> . expr * expr
    (15) expr -> . expr - expr
    (16) expr -> . expr + expr
    (17) expr -> . ID DIVASSIGN expr
    (18) expr -> . ID MULASSIGN expr
    (19) expr -> . ID SUBASSIGN expr
    (20) expr -> . ID ADDASSIGN expr
    (21) expr -> . ID = expr
    (22) term -> . INTNUM
    (23) term -> . FLOATNUM
    (24) term -> . EYE ( expr )
    (25) term -> . ONES ( expr )
    (26) term -> . ZEROS ( expr )
    (27) term -> . [ outerlist ]
    ID              shift and go to state 4
    (               shift and go to state 5
    -               shift and go to state 6
    INTNUM          shift and go to state 7
    FLOATNUM        shift and go to state 8
    EYE             shift and go to state 9
    ONES            shift and go to state 10
    ZEROS           shift and go to state 11
    [               shift and go to state 12

    expr                           shift and go to state 63
    term                           shift and go to state 3

state 62

    (29) outerlist -> outerlist , [ . innerlist ]
    (30) innerlist -> . expr
    (31) innerlist -> . innerlist , expr
    (5) expr -> . term
    (6) expr -> . ID
    (7) expr -> . ( expr )
    (8) expr -> . - expr
    (9) expr -> . expr DOTDIV expr
    (10) expr -> . expr DOTMUL expr
    (11) expr -> . expr DOTSUB expr
    (12) expr -> . expr DOTADD expr
    (13) expr -> . expr / expr
    (14) expr -> . expr * expr
    (15) expr -> . expr - expr
    (16) expr -> . expr + expr
    (17) expr -> . ID DIVASSIGN expr
    (18) expr -> . ID MULASSIGN expr
    (19) expr -> . ID SUBASSIGN expr
    (20) expr -> . ID ADDASSIGN expr
    (21) expr -> . ID = expr
    (22) term -> . INTNUM
    (23) term -> . FLOATNUM
    (24) term -> . EYE ( expr )
    (25) term -> . ONES ( expr )
    (26) term -> . ZEROS ( expr )
    (27) term -> . [ outerlist ]
    ID              shift and go to state 4
    (               shift and go to state 5
    -               shift and go to state 6
    INTNUM          shift and go to state 7
    FLOATNUM        shift and go to state 8
    EYE             shift and go to state 9
    ONES            shift and go to state 10
    ZEROS           shift and go to state 11
    [               shift and go to state 12

    innerlist                      shift and go to state 64
    expr                           shift and go to state 54
    term                           shift and go to state 3

state 63

    (31) innerlist -> innerlist , expr .
    (9) expr -> expr . DOTDIV expr
    (10) expr -> expr . DOTMUL expr
    (11) expr -> expr . DOTSUB expr
    (12) expr -> expr . DOTADD expr
    (13) expr -> expr . / expr
    (14) expr -> expr . * expr
    (15) expr -> expr . - expr
    (16) expr -> expr . + expr
    ]               reduce using rule 31 (innerlist -> innerlist , expr .)
    ,               reduce using rule 31 (innerlist -> innerlist , expr .)
    DOTDIV          shift and go to state 15
    DOTMUL          shift and go to state 16
    DOTSUB          shift and go to state 17
    DOTADD          shift and go to state 18
    /               shift and go to state 19
    *               shift and go to state 20
    -               shift and go to state 21
    +               shift and go to state 22


state 64

    (29) outerlist -> outerlist , [ innerlist . ]
    (31) innerlist -> innerlist . , expr
    ]               shift and go to state 65
    ,               shift and go to state 61


state 65

    (29) outerlist -> outerlist , [ innerlist ] .
    ]               reduce using rule 29 (outerlist -> outerlist , [ innerlist ] .)
    ,               reduce using rule 29 (outerlist -> outerlist , [ innerlist ] .)


Conflicts:

shift/reduce conflict for - in state 2 resolved as shift
shift/reduce conflict for - in state 13 resolved as shift